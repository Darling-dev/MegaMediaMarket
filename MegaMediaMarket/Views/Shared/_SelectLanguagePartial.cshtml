@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
 
@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions
 
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
        .ToList();
}

<li class="header__link">
  <div class="d-flex">
    <img class="header__translate_image" src="/tpl/static/media/language.5f3095c1.svg" alt="language">
    <p class="header__catalog" style="margin-left:10px;">@requestCulture.RequestCulture.UICulture.EnglishName</p>
  </div>

  <ul class="language-selector">
    <form asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@Context.Request.Path" method="post" >
      <select name="culture" onchange="this.form.submit();" asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems"></select>
    </form>
  </ul>
</li>
<style>
    .language-selector {
  background-color: #0f1014;
  color: #c2c6d7;
}

/* Optional: Style the dropdown (select) element */
.language-selector select {
  background-color: #0f1014;
  color: #c2c6d7;
  /* Additional styling for the dropdown can be added here */
}

</style>